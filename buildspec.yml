version: 0.2  
 
phases: 
  install:
    runtime-versions:
        docker: 18     
    commands: 
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  
  pre_build: 
    commands: 
    - echo Logging in to Amazon ECR.... 
    - aws --version
    # UPDATE the following line with your own region.I'm in us-west-1 Region
    - $(aws ecr get-login --no-include-email --region us-west-1) 
  build: 
    commands: 
    - echo Downloading SHIFTLEFT

    # You need to add get-parameter permission for CodeBuild role in order to access SSM parameters
    - export CHKP_CLOUDGUARD_ID=$(aws ssm get-parameter --name "CHKP_CLOUDGUARD_ID" | jq -r '.Parameter.Value')
    - export CHKP_CLOUDGUARD_SECRET=$(aws ssm get-parameter --name "CHKP_CLOUDGUARD_SECRET" | jq -r '.Parameter.Value')

    - wget https://jaydenstaticwebsite.s3-ap-southeast-1.amazonaws.com/download/shiftleft
    - chmod -R +x ./shiftleft
    - echo Build started on `date` 
    - echo Building the Docker image... 
    # UPDATE the following line with the name of your docker image
    - docker build -t test .
    # UPDATE the following line with the URI of your own ECR repository (view the Push Commands in the console)
    - docker tag test:latest 770594577260.dkr.ecr.us-west-1.amazonaws.com/test:latest
    #Saving the docker image in tar
    - echo Saving Docker image 
    - docker save cyberave-docker -o Your-test-dockerimage.tar
    # Start Scan
    - echo Starting scan on `date`
    # UPDATE the saved tar file with your docker image name 
    - ./shiftleft image-scan -i Your-DOCKER-IAMGE.tar > result.txt || if [ "$?" = "6" ]; then exit 0; fi
    - echo Scan finished on `date`
     
  post_build: 
    commands: 
    - echo Pushing image to repo
    # UPDATE the following push command with the URI of your own ECR repository
    - docker push 770594577260.dkr.ecr.us-west-1.amazonaws.com/test:latest
    - echo Build completed on `date` 

artifacts: 
  files:
    - result.txt
    
